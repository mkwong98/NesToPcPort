#pragma once
#include <SDL3/SDL.h>
#include <stack>
#include <vector>

class console;
class mapper;

struct stackEntry {
	bool isPC;
	Uint16 value;
};

class game
{
public:
	console* myConsole;
	mapper* myMapper;
	Uint8 a;
	Uint8 x;
	Uint8 y;
	Uint8 s;
	bool flgC;
	bool flgZ;
	bool flgI;
	bool flgD;
	bool flgV;
	bool flgN;
	bool flgB;
	stackEntry poppedEntry;
	Uint32 threadSignal;
	Uint32 pushedAddress;
	bool gameEnded;

	game();
	void initGame();
	void endGame();
	Uint8 getStatus();
	void setStatus(Uint8 p);
	void opADC(Uint8 v);
	void opSBC(Uint8 v);
	void opAND(Uint8 v);
	void opORA(Uint8 v);
	void opEOR(Uint8 v);
	void opBIT(Uint8 v);

	void opINC(Uint16 address, Uint8 repeatTimes);
	void opDEC(Uint16 address, Uint8 repeatTimes);
	void opINX(Uint8 repeatTimes);
	void opDEX(Uint8 repeatTimes);
	void opINY(Uint8 repeatTimes);
	void opDEY(Uint8 repeatTimes);

	void opASL_A(Uint8 repeatTimes);
	void opASL_M(Uint16 address, Uint8 repeatTimes);
	void opLSR_A(Uint8 repeatTimes);
	void opLSR_M(Uint16 address, Uint8 repeatTimes);
	void opROL_A(Uint8 repeatTimes);
	void opROL_M(Uint16 address, Uint8 repeatTimes);
	void opROR_A(Uint8 repeatTimes);
	void opROR_M(Uint16 address, Uint8 repeatTimes);
	void opCMP(Uint8 v1, Uint8 v2);

	void setLoadFlag(Uint8 v);

	void pushAddress(Uint16 address);
	void popAddress();
	void pushStatus();
	void popStatus();
	void opPLA();
	void opPHA();

	void wait();
	void signal();
	void repeat();
	void brk();

	bool needWaitScanline;
	Uint8 waitScanline;
	void atScanline(Uint8 scanline);

	void reset();
	void nmi();
	void SUB_0000F0();
	void SUB_0000F4();
	void SUB_0000FA();
	void SUB_000100();
	void SUB_000102();
	void SUB_00010B();
	void SUB_00010F();
	void SUB_000123();
	void SUB_000127();
	void SUB_00014A();
	void SUB_000172();
	void SUB_00017E();
	void SUB_0001BB();
	void SUB_0003A8();
	void SUB_0003BF();
	void SUB_0003ED();
	void SUB_000402();
	void SUB_000434();
	void SUB_000454();
	void SUB_000455();
	void SUB_000461();
	void SUB_00047C();
	void SUB_00051D();
	void SUB_00052F();
	void SUB_00056F();
	void SUB_0005B9();
	void SUB_00060A();
	void SUB_000641();
	void SUB_00064E();
	void SUB_0006BA();
	void SUB_0006EF();
	void SUB_00070C();
	void SUB_00071C();
	void SUB_000770();
	void SUB_000786();
	void SUB_000827();
	void SUB_00084C();
	void SUB_000879();
	void SUB_000880();
	void SUB_0008AD();
	void SUB_0009AC();
	void SUB_000A2D();
	void SUB_000A33();
	void SUB_000A45();
	void SUB_000A4B();
	void SUB_000A5D();
	void SUB_000B12();
	void SUB_000B6A();
	void SUB_000B9E();
	void SUB_000C29();
	void SUB_000C30();
	void SUB_000CB5();
	void SUB_000CC1();
	void SUB_000D05();
	void SUB_000D40();
	void SUB_000D50();
	void SUB_000DA0();
	void SUB_000E25();
	void SUB_000EC4();
	void SUB_000F09();
	void SUB_0010D8();
	void SUB_001117();
	void SUB_001196();
	void SUB_0011BF();
	void SUB_0011D2();
	void SUB_0011F4();
	void SUB_001209();
	void SUB_00123C();
	void SUB_00126B();
	void SUB_001289();
	void SUB_0013D7();
	void SUB_0013E3();
	void SUB_001482();
	void SUB_00148D();
	void SUB_0014DB();
	void SUB_0014E6();
	void SUB_0014F1();
	void SUB_001512();
	void SUB_001532();
	void SUB_001562();
	void SUB_001568();
	void SUB_001589();
	void SUB_0015A7();
	void SUB_0015AE();
	void SUB_0015BF();
	void SUB_0015CF();
	void SUB_0015E7();
	void SUB_001603();
	void SUB_001631();
	void SUB_001647();
	void SUB_0016D2();
	void SUB_0016D4();
	void SUB_001772();
	void SUB_001785();
	void SUB_00178E();
	void SUB_00181C();
	void SUB_00181E();
	void SUB_001830();
	void SUB_001831();
	void SUB_00184A();
	void SUB_001867();
	void SUB_0018D3();
	void SUB_0018F5();
	void SUB_001905();
	void SUB_001AB7();
	void SUB_001AFE();
	void SUB_00239A();
	void SUB_00257D();
	void SUB_002687();
	void SUB_0026DF();
	void SUB_00275E();
	void SUB_002760();
	void SUB_00278C();
	void SUB_0027A7();
	void SUB_0027DE();
	void SUB_002979();
	void SUB_002A0E();
	void SUB_002A4E();
	void SUB_002B84();
	void SUB_002B96();
	void SUB_002BA8();
	void SUB_002BB1();
	void SUB_002BBA();
	void SUB_002CB0();
	void SUB_002D1D();
	void SUB_002D1E();
	void SUB_002E1B();
	void SUB_002F2D();
	void SUB_003084();
	void SUB_00308E();
	void SUB_00309C();
	void SUB_0030AA();
	void SUB_0030B3();
	void SUB_0030D4();
	void SUB_0030FD();
	void SUB_00310F();
	void SUB_003139();
	void SUB_003168();
	void SUB_003182();
	void SUB_00319C();
	void SUB_0031A9();
	void SUB_0031CA();
	void SUB_0031E8();
	void SUB_003209();
	void SUB_003349();
	void SUB_00335C();
	void SUB_003360();
	void SUB_00337C();
	void SUB_0033A6();
	void SUB_0033C2();
	void SUB_003401();
	void SUB_003452();
	void SUB_003454();
	void SUB_00345B();
	void SUB_00345F();
	void SUB_003465();
	void SUB_003466();
	void SUB_00349B();
	void SUB_003500();
	void SUB_003503();
	void SUB_003504();
	void SUB_003683();
	void SUB_003687();
	void SUB_00368B();
	void SUB_00368F();
	void SUB_003691();
	void SUB_0036A8();
	void SUB_003712();
	void SUB_00371A();
	void SUB_00371F();
	void SUB_003725();
	void SUB_003745();
	void SUB_003749();
	void SUB_003758();
	void SUB_00377B();
	void SUB_00377C();
	void SUB_00378F();
	void SUB_003798();
	void SUB_00379F();
	void SUB_0037A5();
	void SUB_0037B4();
	void SUB_0037C7();
	void SUB_0037D3();
	void SUB_0037D9();
	void SUB_0037E0();
	void SUB_0037EF();
	void SUB_003800();
	void SUB_003814();
	void SUB_003821();
	void SUB_003824();
	void SUB_00385B();
	void SUB_00385C();
	void SUB_00385F();
	void SUB_003879();
	void SUB_00387D();
	void SUB_00389B();
	void SUB_0038A1();
	void SUB_0038A2();
	void SUB_0038A6();
	void SUB_0038BF();
	void SUB_0038CA();
	void SUB_0038DD();
	void SUB_0038E8();
	void SUB_003907();
	void SUB_00390A();
	void SUB_0039E9();
	void SUB_003A0C();
	void SUB_003A26();
	void SUB_003A27();
	void SUB_003A38();
	void SUB_003A7F();
	void SUB_003A83();
	void SUB_003A96();
	void SUB_003AAC();
	void SUB_003AD8();
	void SUB_003AD9();
	void SUB_003AE2();
	void SUB_003B00();
	void SUB_003B04();
	void SUB_003B17();
	void SUB_003B1E();
	void SUB_003B25();
	void SUB_003B49();
	void SUB_003B4C();
	void SUB_003B52();
	void SUB_003B58();
	void SUB_003B5E();
	void SUB_003B69();
	void SUB_003B6D();
	void SUB_003B7C();
	void SUB_003B82();
	void SUB_003B86();
	void SUB_003B8D();
	void SUB_003BA5();
	void SUB_003BAC();
	void SUB_003BAF();
	void SUB_003BC1();
	void SUB_003FF7();
	void indirectJump(Uint16 target);
};

