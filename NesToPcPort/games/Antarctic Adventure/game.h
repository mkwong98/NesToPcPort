#pragma once
#include <SDL3/SDL.h>
#include <stack>
#include <vector>

class console;
class mapper;

struct stackEntry {
	bool isPC;
	Uint16 value;
};

class game
{
public:
	console* myConsole;
	mapper* myMapper;
	Uint8 a;
	Uint8 x;
	Uint8 y;
	Uint8 s;
	bool flgC;
	bool flgZ;
	bool flgI;
	bool flgD;
	bool flgV;
	bool flgN;
	bool flgB;
	stackEntry poppedEntry;
	Uint32 threadSignal;
	Uint32 pushedAddress;
	bool gameEnded;

	game();
	void initGame();
	void endGame();
	Uint8 getStatus();
	void setStatus(Uint8 p);
	void opADC(Uint8 v);
	void opSBC(Uint8 v);
	void opAND(Uint8 v);
	void opORA(Uint8 v);
	void opEOR(Uint8 v);
	void opBIT(Uint8 v);

	void opINC(Uint16 address, Uint8 repeatTimes);
	void opDEC(Uint16 address, Uint8 repeatTimes);
	void opINX(Uint8 repeatTimes);
	void opDEX(Uint8 repeatTimes);
	void opINY(Uint8 repeatTimes);
	void opDEY(Uint8 repeatTimes);

	void opASL_A(Uint8 repeatTimes);
	void opASL_M(Uint16 address, Uint8 repeatTimes);
	void opLSR_A(Uint8 repeatTimes);
	void opLSR_M(Uint16 address, Uint8 repeatTimes);
	void opROL_A(Uint8 repeatTimes);
	void opROL_M(Uint16 address, Uint8 repeatTimes);
	void opROR_A(Uint8 repeatTimes);
	void opROR_M(Uint16 address, Uint8 repeatTimes);
	void opCMP(Uint8 v1, Uint8 v2);

	void setLoadFlag(Uint8 v);

	void pushAddress(Uint16 address);
	void popAddress();
	void pushStatus();
	void popStatus();
	void opPLA();
	void opPHA();

	void wait();
	void signal();
	void repeat();
	void brk();

	bool needWaitScanline;
	Uint8 waitScanline;
	void atScanline(Uint8 scanline);

	void SUB_000010();
	void SUB_00002A();
	void SUB_000058();
	void SUB_000076();
	void SUB_00008C();
	void SUB_00009C();
	void SUB_0000A8();
	void SUB_000107();
	void SUB_000133();
	void SUB_000169();
	void SUB_000172();
	void SUB_00017B();
	void SUB_000184();
	void SUB_00018D();
	void SUB_000204();
	void SUB_000222();
	void SUB_000225();
	void SUB_000228();
	void SUB_00022D();
	void SUB_00023F();
	void SUB_0002F7();
	void SUB_000401();
	void SUB_000446();
	void SUB_000458();
	void SUB_00046A();
	void SUB_000471();
	void SUB_00048E();
	void SUB_0004C5();
	void SUB_0004CD();
	void SUB_0004D5();
	void SUB_000519();
	void SUB_000528();
	void SUB_0005C5();
	void SUB_0005F7();
	void SUB_000612();
	void SUB_00061E();
	void SUB_00062E();
	void SUB_000699();
	void SUB_0006AD();
	void SUB_0006CB();
	void SUB_00070C();
	void SUB_000713();
	void SUB_000721();
	void SUB_000762();
	void SUB_0007F0();
	void SUB_000822();
	void SUB_000828();
	void SUB_000835();
	void SUB_00083B();
	void SUB_000841();
	void SUB_000847();
	void SUB_00088B();
	void SUB_000890();
	void SUB_000892();
	void SUB_00089C();
	void SUB_0008A5();
	void SUB_00093E();
	void SUB_00095B();
	void SUB_00099C();
	void SUB_000A7F();
	void SUB_000A92();
	void SUB_000AC7();
	void SUB_000BA5();
	void SUB_000BD4();
	void SUB_000C7F();
	void SUB_000C96();
	void SUB_000CA3();
	void SUB_000CA5();
	void SUB_000CA9();
	void SUB_000CB6();
	void SUB_000CBA();
	void SUB_000CC8();
	void SUB_000CD9();
	void SUB_000EAE();
	void SUB_000ECF();
	void SUB_000F08();
	void SUB_000F0E();
	void SUB_000F44();
	void SUB_000F48();
	void SUB_000F4A();
	void SUB_000F4F();
	void SUB_000F89();
	void SUB_000F8F();
	void SUB_000FC3();
	void SUB_000FC7();
	void SUB_001055();
	void SUB_00105E();
	void SUB_001063();
	void SUB_001067();
	void SUB_001073();
	void SUB_001B0E();
	void SUB_001B84();
	void SUB_001E4D();
	void SUB_001EBB();
	void SUB_001EEA();
	void SUB_001F11();
	void SUB_001F54();
	void SUB_001F7B();
	void SUB_001F88();
	void SUB_001FB0();
	void SUB_001FB6();
	void SUB_001FBF();
	void SUB_001FC5();
	void SUB_001FCB();
	void SUB_001FD1();
	void SUB_001FD7();
	void SUB_001FDF();
	void SUB_001FE0();
	void SUB_001FFA();
	void SUB_002002();
	void SUB_002003();
	void SUB_00200C();
	void SUB_00202F();
	void SUB_002053();
	void SUB_00209A();
	void SUB_00209F();
	void SUB_0020A4();
	void SUB_0020A5();
	void SUB_0020AC();
	void SUB_0020D2();
	void SUB_0020DC();
	void SUB_00212F();
	void SUB_002149();
	void SUB_002158();
	void SUB_002159();
	void SUB_00215D();
	void SUB_002176();
	void SUB_00218C();
	void SUB_0021A6();
	void SUB_002296();
	void SUB_002297();
	void SUB_002325();
	void SUB_00232E();
	void SUB_002337();
	void SUB_00233B();
	void SUB_002342();
	void SUB_002344();
	void SUB_00236E();
	void SUB_00239B();
	void SUB_0023AB();
	void SUB_0023B3();
	void SUB_0023BB();
	void SUB_0023C5();
	void SUB_0023CB();
	void SUB_0023DB();
	void SUB_0023E9();
	void SUB_0023EC();
	void SUB_002400();
	void SUB_00240A();
	void SUB_002410();
	void SUB_00241A();
	void SUB_00242A();
	void SUB_00243E();
	void SUB_002448();
	void SUB_00246A();
	void SUB_002471();
	void SUB_00247D();
	void SUB_002481();
	void SUB_00248D();
	void SUB_002491();
	void SUB_002493();
	void SUB_002496();
	void SUB_002D72();
	void SUB_002DBB();
	void SUB_002DF7();
	void SUB_002E0C();
	void SUB_002E0D();
	void SUB_002E10();
	void SUB_002E21();
	void SUB_002E5D();
	void SUB_002E80();
	void SUB_002E93();
	void SUB_002EA3();
	void SUB_002EB4();
	void SUB_002EC2();
	void SUB_002EC8();
	void SUB_002ED6();
	void SUB_002EE4();
	void SUB_002EF1();
	void SUB_002EF7();
	void SUB_002EFF();
	void SUB_002F07();
	void SUB_002F0F();
	void SUB_002F17();
	void SUB_002F1F();
	void SUB_002F27();
	void SUB_002F2F();
	void SUB_002F37();
	void SUB_002F3D();
	void SUB_002F64();
	void SUB_0031BB();
	void SUB_0031EF();
	void SUB_003202();
	void SUB_003233();
	void SUB_003236();
	void reset();
	void nmi();
	void SUB_003348();
	void SUB_00336D();
	void SUB_00336E();
	void SUB_00337A();
	void SUB_003384();
	void SUB_0033F3();
	void SUB_0033FC();
	void SUB_003455();
	void SUB_003456();
	void SUB_00346D();
	void SUB_003497();
	void SUB_00349A();
	void SUB_0034AB();
	void SUB_0034AD();
	void SUB_0034AF();
	void SUB_0034B2();
	void SUB_0034B8();
	void SUB_0034C6();
	void SUB_003576();
	void SUB_003578();
	void SUB_00357C();
	void SUB_003583();
	void SUB_00359B();
	void SUB_0035AF();
	void SUB_0035D2();
	void SUB_0035D4();
	void SUB_0035DD();
	void SUB_0035FF();
	void SUB_003659();
	void SUB_00366C();
	void SUB_003699();
	void SUB_0036C9();
	void SUB_0036CA();
	void SUB_0036DE();
	void SUB_00374C();
	void SUB_003760();
	void SUB_00376E();
	void SUB_0037B7();
	void SUB_0037C1();
	void SUB_0037DA();
	void SUB_0037E8();
	void SUB_0037FB();
	void SUB_003813();
	void SUB_00381A();
	void SUB_00381C();
	void SUB_003831();
	void SUB_003833();
	void SUB_00383E();
	void SUB_003880();
	void SUB_00388A();
	void SUB_00388E();
	void SUB_003890();
	void SUB_003894();
	void SUB_003899();
	void SUB_0038AC();
	void SUB_0038B5();
	void SUB_0038B6();
	void SUB_0038DB();
	void SUB_0038E9();
	void SUB_0038F7();
	void SUB_003919();
	void SUB_003931();
	void SUB_003934();
	void SUB_003941();
	void SUB_00394E();
	void SUB_00395E();
	void SUB_00396B();
	void SUB_003974();
	void SUB_00397B();
	void SUB_00397C();
	void SUB_00399C();
	void SUB_0039AE();
	void SUB_0039AF();
	void SUB_0039DF();
	void SUB_0039E3();
	void SUB_003A0D();
	void SUB_003A88();
	void SUB_003AF3();
	void SUB_003B2B();
	void SUB_003B3A();
	void SUB_003B5C();
	void SUB_003C71();
	void SUB_003C9A();
	void indirectJump(Uint16 target);

};

