#pragma once
#include <SDL3/SDL.h>
#include <stack>
#include <vector>

class console;
class mapper;

struct stackEntry {
	bool isPC;
	Uint16 value;
};

class game
{
public:
	console* myConsole;
	mapper* myMapper;
	Uint8 a;
	Uint8 x;
	Uint8 y;
	Uint8 s;
	bool flgC;
	bool flgZ;
	bool flgI;
	bool flgD;
	bool flgV;
	bool flgN;
	bool flgB;
	stackEntry poppedEntry;
	Uint32 threadSignal;
	Uint32 pushedAddress;
	bool gameEnded;

	game();
	void initGame();
	void endGame();
	Uint8 getStatus();
	void setStatus(Uint8 p);
	void opADC(Uint8 v);
	void opSBC(Uint8 v);
	void opAND(Uint8 v);
	void opORA(Uint8 v);
	void opEOR(Uint8 v);
	void opBIT(Uint8 v);

	void opINC(Uint16 address, Uint8 repeatTimes);
	void opDEC(Uint16 address, Uint8 repeatTimes);
	void opINX(Uint8 repeatTimes);
	void opDEX(Uint8 repeatTimes);
	void opINY(Uint8 repeatTimes);
	void opDEY(Uint8 repeatTimes);

	void opASL_A(Uint8 repeatTimes);
	void opASL_M(Uint16 address, Uint8 repeatTimes);
	void opLSR_A(Uint8 repeatTimes);
	void opLSR_M(Uint16 address, Uint8 repeatTimes);
	void opROL_A(Uint8 repeatTimes);
	void opROL_M(Uint16 address, Uint8 repeatTimes);
	void opROR_A(Uint8 repeatTimes);
	void opROR_M(Uint16 address, Uint8 repeatTimes);
	void opCMP(Uint8 v1, Uint8 v2);

	void setLoadFlag(Uint8 v);

	void pushAddress(Uint16 address);
	void popAddress();
	void pushStatus();
	void popStatus();
	void opPLA();
	void opPHA();

	void wait();
	void signal();
	void repeat();
	void brk();

	bool needWaitScanline;
	Uint8 waitScanline;
	void atScanline(Uint8 scanline);

	Uint8 v1;
	Uint8 v2;

	void reset();
	void nmi();
	void SUB_000009();
	void SUB_000051();
	void SUB_000064();
	void SUB_000080();
	void SUB_000083();
	void SUB_00011F();
	void SUB_000133();
	void SUB_00013D();
	void SUB_000150();
	void SUB_00015B();
	void SUB_0001A5();
	void SUB_0001C8();
	void SUB_0001D4();
	void SUB_0001E1();
	void SUB_00020E();
	void SUB_000226();
	void SUB_0002BC();
	void SUB_00031D();
	void SUB_00033B();
	void SUB_000365();
	void SUB_0003A8();
	void SUB_0003B8();
	void SUB_000416();
	void SUB_000430();
	void SUB_000451();
	void SUB_00047B();
	void SUB_00048F();
	void SUB_0004C2();
	void SUB_0004F3();
	void SUB_000501();
	void SUB_0005A2();
	void SUB_000619();
	void SUB_000634();
	void SUB_0006C8();
	void SUB_00072A();
	void SUB_000745();
	void SUB_0008F6();
	void SUB_000992();
	void SUB_000993();
	void SUB_000D0A();
	void SUB_000D14();
	void SUB_000DB1();
	void SUB_000E46();
	void SUB_000ECD();
	void SUB_000ED7();
	void SUB_000EFC();
	void SUB_000F4D();
	void SUB_000FA1();
	void SUB_001009();
	void SUB_00101C();
	void SUB_001056();
	void SUB_0010A8();
	void SUB_0010E2();
	void SUB_0010E3();
	void SUB_00113D();
	void SUB_001156();
	void SUB_0011A2();
	void SUB_0011B5();
	void SUB_0011B6();
	void SUB_0011C4();
	void SUB_0011F2();
	void SUB_0011FD();
	void SUB_001209();
	void SUB_001249();
	void SUB_001258();
	void SUB_001275();
	void SUB_0012CD();
	void SUB_00130E();
	void SUB_001327();
	void SUB_001338();
	void SUB_0013AD();
	void SUB_0013AE();
	void SUB_0013F1();
	void SUB_00140F();
	void SUB_00146A();
	void SUB_001493();
	void SUB_0014AB();
	void SUB_00156D();
	void SUB_001574();
	void SUB_00161C();
	void SUB_0017A5();
	void SUB_0017B0();
	void SUB_001830();
	void SUB_0018E8();
	void SUB_001922();
	void SUB_00197B();
	void SUB_0019C2();
	void SUB_001A20();
	void SUB_001A26();
	void SUB_001A2C();
	void SUB_001AE6();
	void SUB_001B1E();
	void SUB_001C2D();
	void SUB_001C59();
	void SUB_001C85();
	void SUB_001CBC();
	void SUB_001CEC();
	void SUB_001D00();
	void SUB_001D14();
	void SUB_001D35();
	void SUB_001E35();
	void SUB_001E6D();
	void SUB_001F14();
	void SUB_001F3F();
	void SUB_001FC4();
	void SUB_002260();
	void SUB_0022BE();
	void SUB_002310();
	void SUB_002472();
	void SUB_0024C4();
	void SUB_0024EE();
	void SUB_0025A6();
	void SUB_0025E6();
	void SUB_002702();
	void SUB_00275C();
	void SUB_002772();
	void SUB_00277D();
	void SUB_002831();
	void SUB_002842();
	void SUB_002853();
	void SUB_00288F();
	void SUB_002890();
	void SUB_002965();
	void SUB_0029D1();
	void SUB_002A02();
	void SUB_002A46();
	void SUB_002A6B();
	void SUB_002A8E();
	void SUB_002A97();
	void SUB_002BAA();
	void SUB_002BFC();
	void SUB_002C48();
	void SUB_002C4C();
	void SUB_002C86();
	void SUB_002CD2();
	void SUB_002CFD();
	void SUB_002D2A();
	void SUB_002DBB();
	void SUB_002DBD();
	void SUB_002DC2();
	void SUB_002DC3();
	void SUB_002E52();
	void SUB_002E86();
	void SUB_002E9E();
	void SUB_002ECD();
	void SUB_002EDA();
	void SUB_002EE7();
	void SUB_002F0C();
	void SUB_002F1F();
	void SUB_002F2C();
	void SUB_002F67();
	void SUB_002F90();
	void SUB_002F92();
	void SUB_002FA2();
	void SUB_002FCC();
	void SUB_002FE4();
	void SUB_003013();
	void SUB_003034();
	void SUB_003046();
	void SUB_003059();
	void SUB_0030C9();
	void SUB_0030E4();
	void SUB_0030F4();
	void SUB_00311B();
	void SUB_00336C();
	void SUB_0033EA();
	void SUB_0033EC();
	void SUB_0033FF();
	void SUB_003401();
	void SUB_003403();
	void SUB_00342C();
	void SUB_003520();
	void SUB_0035E2();
	void SUB_00369F();
	void SUB_0036B1();
	void SUB_0036E2();
	void SUB_003711();
	void SUB_003753();
	void SUB_0037A0();
	void SUB_0037E8();
	void SUB_00397F();
	void SUB_00399D();
	void SUB_0039FD();
	void SUB_003A3B();
	void SUB_003AD7();
	void SUB_003AE1();
	void SUB_003AE7();
	void SUB_003B44();
	void SUB_003B8A();
	void SUB_003C05();
	void SUB_003CD1();
	void SUB_003CDD();
	void SUB_003CF9();
	void SUB_003D2D();
	void SUB_0046BB();
	void SUB_0046C1();
	void SUB_0046C7();
	void SUB_004817();
	void SUB_00487F();
	void SUB_0048B0();
	void SUB_004944();
	void SUB_00494F();
	void SUB_004956();
	void SUB_004D21();
	void SUB_004D48();
	void SUB_004E25();
	void SUB_004E30();
	void SUB_004E3B();
	void SUB_004E49();
	void SUB_004E4D();
	void SUB_004E52();
	void SUB_004E5B();
	void SUB_0051A5();
	void SUB_0051C5();
	void SUB_0051E0();
	void SUB_005229();
	void SUB_005266();
	void SUB_005308();
	void SUB_005356();
	void SUB_005372();
	void SUB_00545C();
	void SUB_00547D();
	void SUB_005567();
	void SUB_005588();
	void SUB_005672();
	void SUB_005693();
	void SUB_005777();
	void SUB_005798();
	void SUB_0057B0();
	void SUB_0057FA();
	void SUB_0058C2();
	void indirectJump(Uint16 target);

};

