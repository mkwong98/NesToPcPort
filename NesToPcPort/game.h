#pragma once
#include <SDL3/SDL.h>
#include <stack>
#include <vector>

class console;
class mapper;

struct stackEntry {
	bool isPC;
	Uint16 value;
};

class game
{
public:
	console* myConsole;
	mapper* myMapper;
	Uint8 a;
	Uint8 x;
	Uint8 y;
	Uint8 s;
	bool flgC;
	bool flgZ;
	bool flgI;
	bool flgD;
	bool flgV;
	bool flgN;
	bool flgB;
	stackEntry poppedEntry;
	Uint32 threadSignal;
	Uint32 pushedAddress;
	bool gameEnded;

	game();
	void initGame();
	void endGame();
	Uint8 getStatus();
	void setStatus(Uint8 p);
	void opADC(Uint8 v);
	void opSBC(Uint8 v);
	void opAND(Uint8 v);
	void opORA(Uint8 v);
	void opEOR(Uint8 v);
	void opBIT(Uint8 v);

	void opINC(Uint16 address, Uint8 repeatTimes);
	void opDEC(Uint16 address, Uint8 repeatTimes);
	void opINX(Uint8 repeatTimes);
	void opDEX(Uint8 repeatTimes);
	void opINY(Uint8 repeatTimes);
	void opDEY(Uint8 repeatTimes);

	void opASL_A(Uint8 repeatTimes);
	void opASL_M(Uint16 address, Uint8 repeatTimes);
	void opLSR_A(Uint8 repeatTimes);
	void opLSR_M(Uint16 address, Uint8 repeatTimes);
	void opROL_A(Uint8 repeatTimes);
	void opROL_M(Uint16 address, Uint8 repeatTimes);
	void opROR_A(Uint8 repeatTimes);
	void opROR_M(Uint16 address, Uint8 repeatTimes);
	void opCMP(Uint8 v1, Uint8 v2);

	void setLoadFlag(Uint8 v);

	void pushAddress(Uint16 address);
	void popAddress();
	void pushStatus();
	void popStatus();
	void opPLA();
	void opPHA();

	void wait();
	void signal();
	void repeat();
	void brk();

	bool needWaitScanline;
	Uint8 waitScanline;
	void atScanline(Uint8 scanline);

	void SUB_000018();
	void SUB_000030();
	void SUB_000037();
	void SUB_0000B2();
	void SUB_0000E8();
	void SUB_000103();
	void SUB_00012A();
	void SUB_00017C();
	void SUB_0003AD();
	void SUB_0003E7();
	void SUB_00040C();
	void SUB_000918();
	void SUB_00093E();
	void SUB_000962();
	void SUB_00097A();
	void SUB_00099C();
	void SUB_0009D2();
	void SUB_000A4C();
	void SUB_000A69();
	void SUB_000A71();
	void SUB_000B07();
	void SUB_000B23();
	void SUB_000B8F();
	void SUB_000BA0();
	void SUB_000C19();
	void SUB_000C85();
	void SUB_000C9E();
	void SUB_000CD5();
	void SUB_000D38();
	void SUB_000E0D();
	void SUB_000E7E();
	void SUB_000F3E();
	void SUB_00101F();
	void SUB_0011B3();
	void SUB_00138D();
	void SUB_00139D();
	void SUB_00143C();
	void SUB_00145B();
	void SUB_001478();
	void SUB_00153A();
	void SUB_001599();
	void SUB_0015EE();
	void SUB_001768();
	void SUB_0017A4();
	void SUB_001912();
	void SUB_001A0C();
	void SUB_001A47();
	void SUB_001C9E();
	void SUB_001CFB();
	void SUB_001D3A();
	void SUB_002C7F();
	void SUB_002D30();
	void SUB_002F05();
	void SUB_002F06();
	void SUB_002F29();
	void SUB_002F40();
	void SUB_002F94();
	void SUB_002FB7();
	void SUB_002FF9();
	void SUB_003027();
	void SUB_003030();
	void SUB_003039();
	void SUB_003042();
	void SUB_003057();
	void SUB_0030BC();
	void SUB_003139();
	void SUB_003142();
	void SUB_00314B();
	void SUB_003154();
	void SUB_00319D();
	void SUB_0031AB();
	void SUB_0031E2();
	void SUB_0031EB();
	void SUB_0031FB();
	void SUB_003204();
	void SUB_003248();
	void SUB_003258();
	void SUB_00327D();
	void SUB_003286();
	void SUB_0032F0();
	void SUB_0032FE();
	void SUB_003309();
	void SUB_003322();
	void SUB_00338F();
	void SUB_0033BD();
	void SUB_003422();
	void SUB_003479();
	void SUB_0034F8();
	void SUB_00355B();
	void SUB_003614();
	void SUB_003652();
	void SUB_003658();
	void SUB_003681();
	void SUB_0037DD();
	void SUB_0037DE();
	void SUB_0037E7();
	void SUB_0037ED();
	void SUB_0037FF();
	void SUB_00381F();
	void SUB_00385A();
	void SUB_003876();
	void SUB_0038A6();
	void SUB_0038A7();
	void SUB_0038AF();
	void SUB_0038D3();
	void SUB_0038F0();
	void SUB_00390D();
	void SUB_00392D();
	void SUB_0039EC();
	void SUB_003A15();
	void SUB_003ABB();
	void SUB_003AC7();
	void SUB_003AFF();
	void SUB_003B96();
	void SUB_003BA2();
	void SUB_003C1E();
	void SUB_003C2A();
	void SUB_003C89();
	void SUB_003C95();
	void SUB_003D1B();
	void SUB_003D27();
	void SUB_003D9C();
	void SUB_003DA8();
	void SUB_003DFD();
	void SUB_003E09();
	void SUB_003E5D();
	void SUB_003E69();
	void SUB_003E7A();
	void SUB_003E9B();
	void SUB_003EA6();
	void SUB_003EC0();
	void SUB_003EDF();
	void SUB_003EEB();
	void SUB_003F2B();
	void SUB_003F37();
	void SUB_003F77();
	void SUB_003F83();
	void SUB_003FE0();
	void SUB_00403D();
	void SUB_004049();
	void SUB_004063();
	void SUB_00408F();
	void SUB_00409B();
	void SUB_0040B2();
	void SUB_0040BD();
	void SUB_0040FD();
	void SUB_004109();
	void SUB_004149();
	void SUB_004155();
	void SUB_004168();
	void SUB_00419A();
	void SUB_0041BC();
	void SUB_0041C8();
	void SUB_0044A4();
	void SUB_0044C7();
	void SUB_004573();
	void SUB_004591();
	void SUB_0045E4();
	void SUB_0045EE();
	void SUB_004601();
	void SUB_004622();
	void SUB_00462C();
	void SUB_004701();
	void SUB_00470B();
	void SUB_004733();
	void SUB_0047AD();
	void SUB_0047D3();
	void SUB_0047F0();
	void SUB_00487F();
	void SUB_0048A3();
	void SUB_0048B8();
	void SUB_0048E9();
	void SUB_0048F9();
	void SUB_004908();
	void SUB_004919();
	void SUB_00493E();
	void SUB_004966();
	void SUB_004A89();
	void SUB_004A9C();
	void SUB_004AAE();
	void SUB_004AC1();
	void SUB_004AD0();
	void SUB_004ADB();
	void SUB_004AFA();
	void SUB_004B22();
	void SUB_004C21();
	void SUB_004C33();
	void SUB_004C40();
	void SUB_004D4C();
	void SUB_004F4C();
	void SUB_004F88();
	void SUB_0057C1();
	void SUB_0057C5();
	void SUB_0057DE();
	void SUB_0057F5();
	void SUB_005819();
	void SUB_005828();
	void SUB_005837();
	void SUB_005840();
	void SUB_005879();
	void SUB_00610C();
	void SUB_00611E();
	void SUB_00620F();
	void SUB_006219();
	void SUB_00627B();
	void SUB_0062A3();
	void SUB_0062C9();
	void SUB_0062F1();
	void SUB_006337();
	void SUB_006364();
	void SUB_006385();
	void SUB_0063DA();
	void SUB_006409();
	void SUB_00643A();
	void SUB_00646B();
	void SUB_00649C();
	void SUB_0064C4();
	void SUB_0064F5();
	void SUB_006522();
	void SUB_006553();
	void SUB_00659D();
	void SUB_0065CA();
	void SUB_0065FB();
	void SUB_00661F();
	void SUB_006650();
	void SUB_006681();
	void SUB_0066D6();
	void SUB_006705();
	void SUB_006718();
	void SUB_006724();
	void SUB_006730();
	void SUB_00673C();
	void SUB_006748();
	void SUB_006772();
	void SUB_0067A1();
	void SUB_0067D0();
	void SUB_0067F7();
	void SUB_006820();
	void SUB_006851();
	void SUB_00685D();
	void SUB_006887();
	void SUB_0068AB();
	void SUB_0068D4();
	void SUB_0068F7();
	void SUB_00693A();
	void SUB_00694D();
	void SUB_006956();
	void SUB_006959();
	void SUB_00695B();
	void SUB_00695C();
	void SUB_00695E();
	void SUB_006975();
	void SUB_006996();
	void SUB_0069C3();
	void SUB_0069C6();
	void SUB_0069EC();
	void SUB_006A1B();
	void SUB_006D27();
	void SUB_006EA2();
	void SUB_007187();
	void SUB_007590();
	void SUB_0075A3();
	void SUB_00775A();
	void SUB_0077B1();
	void SUB_007A7B();
	void SUB_007A94();
	void SUB_007BC3();
	void SUB_007BE5();
	void SUB_007C12();
	void SUB_007C54();
	void SUB_007C96();
	void SUB_007D25();
	void nmi();
	void SUB_007F30();
	void SUB_007F3A();
	void SUB_007F44();
	void SUB_007F4A();
	void reset();
	void indirectJump(Uint16 target);

};

